version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  postgres:
    image: postgres:latest
    container_name: postgres-server
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-server
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-server
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-server
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
      KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1"  # Örnek topic'ler ve konfigürasyonları
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  redis-data:
  postgres-data:
